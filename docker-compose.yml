name: passport

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: passport-app
    env_file:
      - .env
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - passport-network
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: passport-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-passport}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - passport-network

  redis:
    image: redis:7-alpine
    container_name: passport-redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - passport-network

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: passport-mailhog
    ports:
      - "${SMTP_PORT:-1025}:1025"
      - "${MAILHOG_HTTP_PORT:-8025}:8025"
    networks:
      - passport-network

networks:
  passport-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
